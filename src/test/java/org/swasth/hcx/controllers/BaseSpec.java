package org.swasth.hcx.controllers;

import com.fasterxml.jackson.core.JsonProcessingException;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.autoconfigure.web.servlet.WebMvcTest;
import org.springframework.boot.test.mock.mockito.MockBean;
import org.springframework.core.env.Environment;
import org.springframework.test.context.ActiveProfiles;
import org.springframework.test.web.servlet.MockMvc;
import org.springframework.test.web.servlet.setup.MockMvcBuilders;
import org.springframework.web.context.WebApplicationContext;
import org.swasth.hcx.dto.Response;
import org.swasth.hcx.utils.JSONUtils;
import org.swasth.hcx.controllers.v1.*;
import org.swasth.hcx.helpers.EventGenerator;
import org.swasth.hcx.service.HeaderAuditService;
import org.swasth.hcx.utils.OnActionCall;

import java.util.HashMap;
import java.util.Map;


@WebMvcTest({CoverageEligibilityController.class, PreAuthController.class, ClaimsController.class, PaymentsController.class, AuditController.class, StatusController.class, SearchController.class, CommunicationController.class, PredeterminationController.class})
@ExtendWith(MockitoExtension.class)
@ActiveProfiles("test")
public class BaseSpec {

    @Autowired
    protected WebApplicationContext wac;

    protected MockMvc mockMvc;

    @MockBean
    private OnActionCall onActionCall;

    @MockBean
    protected EventGenerator mockEventGenerator;

    @Mock
    protected Environment mockEnv;

    @MockBean
    protected HeaderAuditService headerAuditService;


    @BeforeEach
    public void setup() {
        this.mockMvc = MockMvcBuilders.webAppContextSetup(wac).build();
    }

    public String getRequestBody() throws JsonProcessingException {
        Map<String,Object> obj = new HashMap<>();
        obj.put("payload","eyJ4LWhjeC1yZWNpcGllbnRfY29kZSI6IjEtMjk0ODJkZjMtZTg3NS00NWVmLWE0ZTktNTkyYjZmNTY1NzgyIiwieC1oY3gtY29ycmVsYXRpb25faWQiOiJhMWI1NDY4Ny1iOWYxLTQxODgtOTcxMS0xN2Q0ODg0MGIzOTAiLCJoLWhjeC10ZXN0X3JhbmRvbSI6InRydWUiLCJ4LWhjeC1zdGF0dXMiOiJyZXF1ZXN0LnF1ZXVlZCIsImgtaGN4LWFwaV9jYWxsX2lkIjoiZWNmM2IwNjYtNWRkZC00MGQxLTlhYmUtNzYzNzFmNTZkMzBlIiwieC1oY3gtcmVxdWVzdF9pZCI6IjA1OTAyMGM3LWVjOWEtNDNjMy04OGNiLTYzOTc5ZGIzZTU5ZCIsImgtaGN4LWNvcnJlbGF0aW9uX2lkIjoiZjZiNTc4ZDItN2NjMC00NTc4LTk4ZTctMDkxMjM4ZTRjNWMwIiwieC1oY3gtdGltZXN0YW1wIjoiMjAyMi0wNC0yMFQxMzoyNzozMi4wMTYrMDU6MzAiLCJ4LWhjeC1zZW5kZXJfY29kZSI6IjEtNTIxZWFlYzctOGNiOS00YjZjLThiNGUtNGRiYTMwMGFmNmY0IiwiZW5jIjoiQTI1NkdDTSIsIngtaGN4LXdvcmtmbG93X2lkIjoiMjljMDZlNjgtODNhOS00MzQwLWIwMDItYmEzYjhhZjZmZjlmIiwiYWxnIjoiUlNBLU9BRVAtMjU2IiwieC1oY3gtYXBpX2NhbGxfaWQiOiI5OWI5YTZkNi04ODA4LTRiNTMtYjYzNS1hNDhkYjgzZTM1ZGIiLCJ4LWhjeC10ZXN0X3JhbmRvbSI6InRydWUifQ.TkkixxViuT93qPFKvnIiQHyQLDuVps1e5AVuqFY--hyire6yLNg_LKQQlKJvp9a5o2XnqODrVWPUBWHYQB88nqlEZvxpJfqlW9ZjXyDGBLKf3885P1GaYJL3EJscFn-UCXIlQWU4xmqzI3C-7B4Yczx9FUPzRo9FgXlgKly4x4WGYrLi59rAuz60afZFo8lnLeBymvafiwfckjzDoV838Xti9FGOlQ4leNyyY8EwMnGljXk8zPspk87r67Bj_QTKhjMxQQ0TAvgvllNUoY0JF6GewD_-XAvxDH5BuihtHVOCjCNgZNsbAZHTw3hrvQAdXPHNCdtI6vIONMhdcWSo-w.26526NmL1ltgh4oz.EXe-VkATD3uLYnodGRcEY7VMy40JWKMwPPcFJy9RWxBQoWJ-yYqUxSm2sewKTmVCdwc40j--cLUmF5u8ovwpOJytFnY-FVAFOAxUIHVk2wcy5K0pQKd876wEx4sINzpTPVfCUre2uFDbPTCDZPLpa2uxc9e8rHmEzfLkR_h8UULrQ6PscLto_seG7_8Q6P1lb7FliHxh2ZWZZx_o1lGqDNd1-BTDzj5MnYepdcjX-40bQHJVcfyo1FygJc8P_D5GlLd19vwnF-o14Zl0-2xZtO2fWS-VgXSInhmT0JiUrlsGbVTB05taxHwvvy_JbBUxBjtntrQZ68QpiqfE0ZSk1uRFp1J8ve78pU-QDYpp46sh5JN-cAxAUmMkrY5Kda0Q3PTudpl4j2FDAHkr3AQlvYJL0T_earthDOOuc81Hu6ju9U_dS8PvvKTefGNANwNX1jsfG_Mby8jBhjNsuHYbCStUtinqgBIJXnUYb2NfH4IqC6BxNWxsKzoqMG5UM0wr3n4wVT3_2GNDKOBV4iNIsFzznWMY-sqD-q_ZK6NBjsfD23RbRQtacpFBYCW2LQxQZ4wrMvxmUYI56XJJUoDvpiggG5IcY4Y_t-260Et68K5X_eIrzYk8Up3bPONZiIWvj7jRfGDGh6Kmff0jWuqkF2egLih_s90DALHZ9cWVqeIFwMVzHvhA4FFWIRsz9mvLJC1iwegka4ipJMSkRJOIrEZ5drM8krUQ2cajYZkoFvnMH_N6o_9zmwYJPBq8CPy-t-sNBUSHnA-ielKXFASAui37mJGP_Svyf118Y8IdALmsFyGf0oyVHuxAiobxqnOgimpPxPtakXLFlv36V_MYBwVf6R-NkrtUcjU1YtMqxlV-rUpusOY2zvtMH7XNqG-sKszlgptaomWVorAPH6He1ONCtQ2rdAI1ORraFsQtP3xQ6b1YpMz0OC0mYWXtCdCbvFAKIjnUQQHiydBJWAcnfs7VFHMI1fW5WjJQC7u0Mfth8iWCttYD0EEouTwB4mWJ0K3AJW1Jvhjo9B-U3ev1UxNO6Ukr48P8qjkj7jTIB6JGEp4t14a7K_5rPrVUlDCKVCN6RqR0yC-tOSvjacIj9z17qToc_fBsluc8BcZ-I8OrY7s15Z_nwWZSM-t1synibca9_3pyYtx6qJL-zPUXK51j_v7CnNJirUnp_cF2P8RutJfG4AvFNK_fvE5hXKid1YXywrX7G7q8avsOwMxI05s2AW-UVTwb-sFAdB7sWKFlPAKQjcfIZm8_RXKMgVVQFYbP3ubCsvl6tXATRPY1iII5jsHYpcvVuY-hDpHfiLAle-jGFcLvrtyRdpY2IJq5wvk15X3Ey2nCIiddr0y2MftieB0y1_gnBeYXUJmRG3pkmQ6bQFyhKScYkX9u4g2ew7_vdD-6a8KcYqEaWEmaejqdocXNqxKr99H5EubdKUfQwmBogYetdbvR0yrCsheeLqJtRLFqsoe1nXGD2kPz1lCIwCz6bx_Yr3Q07N8-f3SxaB1X6-osgX4B50Q0yDtoNpGaHWHITyJnjFpkQ5nAx4oKR6pEtVO0_w8Cj2pxFbeAtlJVAtePOqUE0l-pEsrvvHCwOqld9oC2P0ksgF7JX2yMYiPKZs_YFtVUwEy7OA4nyfnKsb73pgY-UUHXfp6d-FQ19klU-VfzcLP_Y9Y1TEosWvuztDzjOkvizBd14zh4TsfkNtuWAeNE5ZQMQBlT4mcRrGqotnxEzzgj3AMLbpk0xvPl6H7j3eD7nonBvIGaDgKs9MjKr1K4rdWhlcQAvssiX64IbtAJEDgZ4ZYEwxz93j-e_A3xl2ly2FshW94lXrstSTb-ZUom7CPCQGLZv9tlH42xECFyy46cP7gcR4ebajvdxiAPPsSl7d2rsXgYanTRr71Hml2_RHX0mwVRmO7liQRizmcl1ELdf_V4QH8V4m8mjZO3dur1azTT24j_DdcdaN1Iwb4wXPX3QfmITd7hvVzbKzGNEmuq8gvTwGqeUGt_aNGOfdKk8uEiGOi3iYsjST1w-oga7FKSMxlJZN531tWoNgUo6iIpsRxUaVr5_wnuNbAqPUHOYTwb1SmmArb88FLjbM47vsM9NyGmYh_QLebhzKvbSsOxVr_elzf6-70aICT8MlPxXmiw4jtkmykNh4jbVfZL8qkJhHqGcHyCU5lWEFnE-EubgY53RCYhDQ6A1rf45XEaCmZ0siXZoPuQR5pU3qIoFNgR-m3yPkwKD83MwMWTxCg7FlnU3_7SFsSBS09y26uNWz3Ec6NYedCV42NKcG80EGBghC7CMPxHk_P4XzY1w5M_fzgcCIY3C57pGrH-h-omT4tdP2xvYWQS9eCafya-I19AuG2phza0aI244lOmIpBWmAVfxsKAeBwXYWO--4FuGp4mSg1p_0XxvMAezzR14cRdgZVoIn3Ey_Yo8HQleR_VInEWCuLlQBJdXUe8jtkK63wElXLNuSyhxVjqIjuc9sLMql5VBMZHi17I6z0YVewrcUJwBi-LN1Hv3Jf6JUqpgQmtazC8dM1bszf3dtTjJ2YwJStL3y66sRqwneLZU7sCW464W_G8l5PPZkEFaFP9gY_3Uc2fNeB7H1IXfBurRmyL5w75cQssJ1qGPxPBK3DrldliV9_RS6PKjS-RFg72XRQwRICtprS8pWGvitUsC4X8my_7SjUICmPybaUdneQdn1y41F3wVJLXGOeIEVT3m5Hoc27J736GX4eM3PygoSRJY_e1_kGn2af7iG9YUu8Q6ShygVZV-w5TFQMWhRI93AlEL6Vh8_5pyZTOdv9FHmpcjRsYlNvmi7kueP3ua6Uf-JfTKvMR3NIlU-sKZQGZhmFx644MDOm1boAhuqzFuwkSfXcartxW0iVv7Sx24qzoz9louzPoO30RrwoQ-dfJ5SdqdRK4JMUGocqx4eOyv0HbxTzbKRiT-rg4o5wsTPo5y2NKKfuMB1FsOisUF_SbbpEHlw8uJcx8VEtmM-Ru5QJzrtj9tNOxdT-y4LftDi4qPjXfu0K0k5cK0LlI0Z0sWPTFncHYSP5ChTi09wghRjc9P8hDnZtl_ba0B_STuyHhtiZGq8rLzfQ3IgIa64_ERGBeJ7xfO58OMtE2ZLHv-0w7MMcfz-7DvrDp3MU68cD2_utZQ1bD5q_w5_z2far0KPqLbG0rCe7mLsM5tWkRDF8DIQsLK0HDJg8ciFFoq-49hc8GpmKc4g4trGI4lExBVkYsdcztgLPKqLftAV0NPJ8RcatSxFu9t3icy7gSwhU0Q8CPBq1GSUl1a5wgann0NXJpDxC-76CEttay_7mILeuBZR5sdItADNkE1OtBJqJuYOtTEhoBJihsMokTdfpZAZF7Aibd3oVJ5RCKlyXst0mlIVdeGaFa36Ix9_kwAh_TU6Vcyr-L9JfjU5LlImUWFV25oXNpPdSvGR609iJo-70wKO3XzmLXtW9jXr5PvmToy2fo9872E4MB125KJlEI6HqIdVpYZl1L-6Nm7UuZBYLb8KSIpr9cC-KiBaHHCghUhbSlK6owWJcmjQXaIXcqz0hgdKJ0Jsg5RuEjCfXluIt1EryT9tUDoPgWgIL21FVY_rvZkGc_QZIqH50mWZxavo7wImEg5Owa70mxuAuYtLdZspjIcwEcmLEtakx47C-86cQ96M85Oy25e_ZAnaZi8i6YEUub4tN_VslCKoQ3iIh0L2COapOzSdPgHCWvdKtSEsbuuLl2pfh6y9eBeAzOZa2QNI8ino1xKqqnlQu88IvjRwYoRb8BDZ5xZmT0GqXiVGYDPLRl0-QZdalcDJ604Crgrqr0Y3wjC077GaOdGFZ0cOY2fxwYChHP_IaektNTDmo2slc_eh4RL5iQJMjGvYv0u9er5AFYaGXAReMw2Hy0DrVkclHDYSAQ0gQGaJ2_lc5zuFzr-u9N5IO7WGwyZrSriP29j4KNX8Kc-1ZE2zkBM0ONlqlyiTw7mJcIAHqQFykOCuTIir4BwvPwEn9uaYbfwpWK6c4gkYqZ4vfh0aNrGozc8A-LoJwvAPTe4ZK0qkMhDhersWlIOWj6jeoyaN4fHJNPD3dUxqr5M6t6h7NWP60TkBGlg4dgzMnE7dQrXmE9YylBZ3Rv6FzRRcl5n3L88OI6bRTGm830IXVskVjqpHB4Qss63uL2WfrknVbtK6gJoUSPYBiJhC0-wePcL3uCO2cNJFQdpkstX0axy8BrVfeTuWR8CtOcPWwFTaKL7RMqXuDWDPUR_PrVT5KN4-46WiPpS8imOxUbJI45mNKqIb9jKQQ8AfEDrMxq8kGDE4oPqeLG3uGZd5P5yTKBH1gLWuH17Ag8O3sjpeL-W1pknZa-Wn6068VJSDqka9oeQJx2ALYoZ7aKj7YX8M36uD5z1Rx2djIqeuUxV2ov81dJyi7Cp3OevMTVqxzqSvJ4gL4-g1uemWXfXwkfVOeNOMZNXxJRE8UsO490CpFDRiXt5f4FolcEOat96bsOehMshyvMNSuw0fNpK_IDN3nacpaG2dHeWsj1yUGq2Cyk5hmetBibAfOs0sggr3scKec929W1_2-krjlv_efZCGYb7UnkHOqV_4Ioenc7J-yyMem2OlLtjBHFXEC6lHLBoHGQhnSfBv6ujI5i8u3H9nBnjHPIzDjjSCTS8gNgHUs6AFWQ0mZffvtNGHuacCuscW9LdbVjnYy_Snyb9hQU9fA891mRGZya3lld4paOCy8eTgbeiISTZGSCVJI8dHKb5OOpHqmCNpoP4iIp4Y6fyJVh4vvtfdL2nndQxy3cfoeqNAZB01jBDbKWwxIt3Mppv1gBlmK1-CeHWvL3TceJ1rUtcSfAoqnkIozdPQPWJj4kCkxxSKTAXhOhBgPf-isuNLouWT0zCZmhOdq35Lh-JwinYpz16-PprELuqAsFzyk.33fp8abA9AJWXKrW4Xzfpg");
        return JSONUtils.serialize(obj);
    }

    public String getBadRequestBody() throws JsonProcessingException {
        Map<String,Object> obj = new HashMap<>();
        obj.put("payload","eyJlbmMiOiJBMjU2R0NNIiwKImFsZyI6IlJTQS1PQUVQIiwKIngtaGN4LXJlY2lwaWVudF9jb2RlIjoiMS0yNzk5YjZhNC1jZjJkLTQ1ZmUtYTVlMS01ZjFjODI5NzllMGQiLAoieC1oY3gtcmVxdWVzdF9pZCI6IjI2YjEwNjBjLTFlODMtNDYwMC05NjEyLWVhMzFlMGNhNTA5MSIsCiJ4LWhjeC1jb3JyZWxhdGlvbl9pZCI6IjVlOTM0ZjkwLTExMWQtNGYwYi1iMDE2LWMyMmQ4MjA2NzRlMSIsCiJ4LWhjeC10aW1lc3RhbXAiOiIyMDIyLTAxLTA2VDA5OjUwOjIzKzAwIiwKIngtaGN4LXN0YXR1cyI6InJlcXVlc3QuaW5pdGlhdGUiLAoieC1oY3gtd29ya2Zsb3dfaWQiOiIxZTgzLTQ2MGEtNGYwYi1iMDE2LWMyMmQ4MjA2NzRlMSIsCiJ4LWhjeC1kZWJ1Z19mbGFnIjoiSW5mbyIsCiJ4LWhjeC1lcnJvcl9kZXRhaWxzIjp7ImVycm9yLmNvZGUiOiAiYmFkLmlucHV0IiwgImVycm9yLm1lc3NhZ2UiOiAiUHJvdmlkZXIgY29kZSBub3QgZm91bmQiLCAidHJhY2UiOiAiIn0sCiJ4LWhjeC1kZWJ1Z19kZXRhaWxzIjp7ImVycm9yLmNvZGUiOiAiYmFkLmlucHV0IiwgImVycm9yLm1lc3NhZ2UiOiAiUHJvdmlkZXIgY29kZSBub3QgZm91bmQiLCJ0cmFjZSI6IiJ9LAoieC1oY3gtc3RhdHVzX2ZpbHRlcnMiOnsicmVxdWVzdF9pZCI6IjI2YjEwNjBjLTFlODMtNDYwMC05NjEyLWVhMzFlMGNhNTEwMSJ9LAoiandzX2hlYWRlciI6eyJ0eXAiOiJKV1QiLCAiYWxnIjoiUlMyNTYifSwKImp3ZV9oZWFkZXIiOnsiYWxnIjoiUlNBLU9BRVAiLCJlbmMiOiJBMjU2R0NNIn0KfQ==.6KB707dM9YTIgHtLvtgWQ8mKwboJW3of9locizkDTHzBC2IlrT1oOQ.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.AxY8DCtDaGlsbGljb3RoZQ.KDlTtXchhZTGufMYmOYGS4HffxPSUrfmqCHXaI9wOGY.Mz-VPPyU4RlcuYv1IwIvzw");
        return JSONUtils.serialize(obj);
    }

    public String getExceptionRequestBody() throws JsonProcessingException {
        Map<String,Object> obj = new HashMap<>();
        obj.put("payload","eyJlbmMiOiJBMjU2R0NNIiwKImFsZyI6IlJTQS1PQUVQIiwKIngtaGN4LXNlbmRlcl9jb2RlIjoiMS05ODc1Ni1jZjJkLTQ1ZmUtYTVlMS01ZjFjODI5NzllMGQiLAoieC1oY3gtcmVjaXBpZW50X2NvZGUiOiIxLTI3OTliNmE0LWNmMmQtNDVmZS1hNWUxLTVmMWM4Mjk3OWUwZCIsCiJ4LWhjeC1hcGlfY2FsbF9pZCI6MTIzLAoieC1oY3gtdGltZXN0YW1wIjoiMjAyMi0wMS0wNlQwOTo1MDoyMyswMCIsCiJ4LWhjeC13b3JrZmxvd19pZCI6IjFlODMtNDYwYS00ZjBiLWIwMTYtYzIyZDgyMDY3NGUxIgp9.6KB707dM9YTIgHtLvtgWQ8mKwboJW3of9locizkDTHzBC2IlrT1oOQ.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.AxY8DCtDaGlsbGljb3RoZQ.KDlTtXchhZTGufMYmOYGS4HffxPSUrfmqCHXaI9wOGY.Mz-VPPyU4RlcuYv1IwIvzw");
        return JSONUtils.serialize(obj);
    }

    public String getHeadersMissingRequestBody() throws JsonProcessingException {
      Map<String,Object> obj = new HashMap<>();
      obj.put("payload","eyJlbmMiOiJBMjU2R0NNIiwKImFsZyI6IlJTQS1PQUVQIiwKIngtaGN4LXJlY2lwaWVudF9jb2RlIjoiMS0yNzk5YjZhNC1jZjJkLTQ1ZmUtYTVlMS01ZjFjODI5NzllMGQiLAoieC1oY3gtcmVxdWVzdF9pZCI6IjI2YjEwNjBjLTFlODMtNDYwMC05NjEyLWVhMzFlMGNhNTA5MSIsCiJ4LWhjeC1jb3JyZWxhdGlvbl9pZCI6IjVlOTM0ZjkwLTExMWQtNGYwYi1iMDE2LWMyMmQ4MjA2NzRlMSIsCiJ4LWhjeC10aW1lc3RhbXAiOiIyMDIxLTEwLTI3VDIwOjM1OjUyLjYzNiswNTMwIiwKIngtaGN4LXN0YXR1cyI6InJlcXVlc3QuaW5pdGlhdGUiLAoieC1oY3gtd29ya2Zsb3dfaWQiOiIxZTgzLTQ2MGEtNGYwYi1iMDE2LWMyMmQ4MjA2NzRlMSIsCiJ4LWhjeC1kZWJ1Z19mbGFnIjoiSW5mbyIsCiJ4LWhjeC1lcnJvcl9kZXRhaWxzIjp7ImVycm9yLmNvZGUiOiAiYmFkLmlucHV0IiwgImVycm9yLm1lc3NhZ2UiOiAiUHJvdmlkZXIgY29kZSBub3QgZm91bmQiLCAidHJhY2UiOiAiIn0sCiJ4LWhjeC1kZWJ1Z19kZXRhaWxzIjp7ImVycm9yLmNvZGUiOiAiYmFkLmlucHV0IiwgImVycm9yLm1lc3NhZ2UiOiAiUHJvdmlkZXIgY29kZSBub3QgZm91bmQiLCJ0cmFjZSI6IiJ9LAoiandzX2hlYWRlciI6eyJ0eXAiOiJKV1QiLCAiYWxnIjoiUlMyNTYifSwKImp3ZV9oZWFkZXIiOnsiYWxnIjoiUlNBLU9BRVAiLCJlbmMiOiJBMjU2R0NNIn0KfQ==.6KB707dM9YTIgHtLvtgWQ8mKwboJW3of9locizkDTHzBC2IlrT1oOQ.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.AxY8DCtDaGlsbGljb3RoZQ.KDlTtXchhZTGufMYmOYGS4HffxPSUrfmqCHXaI9wOGY.Mz-VPPyU4RlcuYv1IwIvzw");
      return JSONUtils.serialize(obj);
    }

    public Response validHealthResponse() {
        return new Response("healthy",true);
    }
}
