package org.swasth.hcx.controllers;

import com.fasterxml.jackson.core.JsonProcessingException;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.autoconfigure.web.servlet.WebMvcTest;
import org.springframework.boot.test.mock.mockito.MockBean;
import org.springframework.core.env.Environment;
import org.springframework.test.context.ActiveProfiles;
import org.springframework.test.web.servlet.MockMvc;
import org.springframework.test.web.servlet.setup.MockMvcBuilders;
import org.springframework.web.context.WebApplicationContext;
import org.swasth.hcx.dto.Response;
import org.swasth.hcx.utils.JSONUtils;
import org.swasth.hcx.controllers.v1.*;
import org.swasth.hcx.helpers.EventGenerator;
import org.swasth.hcx.service.HeaderAuditService;
import org.swasth.hcx.utils.OnActionCall;

import java.util.HashMap;
import java.util.Map;


@WebMvcTest({CoverageEligibilityController.class, PreAuthController.class, ClaimsController.class, PaymentsController.class, AuditController.class, StatusController.class, SearchController.class, CommunicationController.class, PredeterminationController.class})
@ExtendWith(MockitoExtension.class)
@ActiveProfiles("test")
public class BaseSpec {

    @Autowired
    protected WebApplicationContext wac;

    protected MockMvc mockMvc;

    @MockBean
    private OnActionCall onActionCall;

    @MockBean
    protected EventGenerator mockEventGenerator;

    @Mock
    protected Environment mockEnv;

    @MockBean
    protected HeaderAuditService headerAuditService;


    @BeforeEach
    public void setup() {
        this.mockMvc = MockMvcBuilders.webAppContextSetup(wac).build();
    }

    public String getRequestBody() throws JsonProcessingException {
        Map<String,Object> obj = new HashMap<>();
        obj.put("payload","eyJ4LWhjeC1yZWNpcGllbnRfY29kZSI6IjEtMjk0ODJkZjMtZTg3NS00NWVmLWE0ZTktNTkyYjZmNTY1NzgyIiwieC1oY3gtY29ycmVsYXRpb25faWQiOiIwYTgzYmUxOS1lY2IxLTRlZGItYTgyYS1hNGQwYmFhMGJmMzciLCJoLWhjeC10ZXN0X3JhbmRvbSI6InRydWUiLCJ4LWhjeC1zdGF0dXMiOiJyZXF1ZXN0LnF1ZXVlZCIsImgtaGN4LWFwaV9jYWxsX2lkIjoiZWNmM2IwNjYtNWRkZC00MGQxLTlhYmUtNzYzNzFmNTZkMzBlIiwieC1oY3gtcmVxdWVzdF9pZCI6IjA1OTAyMGM3LWVjOWEtNDNjMy04OGNiLTYzOTc5ZGIzZTU5ZCIsImgtaGN4LWNvcnJlbGF0aW9uX2lkIjoiZjZiNTc4ZDItN2NjMC00NTc4LTk4ZTctMDkxMjM4ZTRjNWMwIiwieC1oY3gtdGltZXN0YW1wIjoiMjAyMi0wNC0xMVQxNDozMzo0Mi4yOTMrMDU6MzAiLCJ4LWhjeC1zZW5kZXJfY29kZSI6IjEtNTIxZWFlYzctOGNiOS00YjZjLThiNGUtNGRiYTMwMGFmNmY0IiwiZW5jIjoiQTI1NkdDTSIsIngtaGN4LXdvcmtmbG93X2lkIjoiMjljMDZlNjgtODNhOS00MzQwLWIwMDItYmEzYjhhZjZmZjlmIiwiYWxnIjoiUlNBLU9BRVAtMjU2IiwieC1oY3gtYXBpX2NhbGxfaWQiOiJjNzA0ZjY1OC1kZGVmLTQzMzgtYjIxYi1iZjI5NGQ4NDE0MGIiLCJ4LWhjeC10ZXN0X3JhbmRvbSI6InRydWUifQ.gL1MwEwNsL2EH-OZrgbDhW26zDc1WD2IgEtooaf_S4hKBcz-yEuW-Ic-xY5LO9rGtCtmYMn8dQy64ikrdiiL646g2ga0R_KQkI-5c0z8EKppyzzyUpwdjve6c2EW8kIpuxd4cfgu_DI7bFe7W8YpwqWvHCt-WdByz4LmYEsuT-cbRPii6-U2DIOiZTP2NaRwALhNxznHAmnzNaqcnYLJmlFYIEuNHNEDIasEnkXEkmvyTS2K0Vw0GutlRZGI9DPqMB8DfZOXuhhnO52g1XMZER4M6TXACUS0NPlMJYKtXtcUMoyYXAUdr7-y22ysQPp1FgpuXV6YcvR9XO4eGzYRsw.TcfFHY_wLvFZoZCT.hEgs3U4LKQaeHGbTMWBcxDAO2hoGs9vRkzqBdFZ6CUKDpaL9DFjfP8OBS2D9ZGdyeN3fckEWqzj8HiOFsj3nsBbQMmFII1c27b28KDnRem6Fya4orvW06R1hYnUOZ32193ugFbzlhTMp8htAn1dzIDJeFwrvi_UzI43BHYYasYtx7mAtjlQWrm6TzPkv04shotdyOpgQDFLUk7qyXzVVrpkimwSx0cW5tcS179-GgGXVTAXvDL_9GbKPlicnUQG8VbAgRPE-crbTaIUeiwx_s_-9_NzGcKlzi_ZjEbvDev8yK88FNMXqtf3cY3TY6tHO628N0uj0y2vzv_qmX8efAsd4PJT30I7sepG5YFroIog_otr-K8SxpzdzZvH6kiPpOqf2Gkkyu5X_hrYlnpTxN0Oec_t0KGDY0xeYkVDIn0tZh0ZwIXBxQ3BNO-4aWJoiThxXgfctBK4XhNB8eynVmyt0Z597mUi0VgyQVhz6UtXn2_Arv4yDcF-CEfI4cn7lJIGCYs5BHcTwq1jAMcDoiHELOXF0vT_Hi8pT1kVZ1D0HYViM_bsEqTIDZ4mw34xiENxikAWKJ-_2mpXEtKVpuOtoW9jvD4AYdVo0c6DDaU6ZprMbZQv_MEqv0y5-bXatrsm0yyyoRZUuOqiMseRTvdE15p-a0CsL5G954x6R5UpsBTpVO1rO4sBFR5o-Df0Zl2jH21-DhNds7BQFKDmRtlWpHCIgQl7AwjVSlqu4jWjikOFRxc1akUIY6SPHDXzv7TgeNmlFI_m2wh8aYtEvrxiFeO1HOqcQ2o3AYDrbt4Q1xqqHgyQ7ug_66mOPvViBdrfd_RteZbMS1aB0ZPAD9GnRpSGle7VIHDtlrYkCvZJRpsTLQKbd2hdgsABGRIq_3b4N546EvSc0lSs6e3fwdpzr5XiV_CGi_dTvOQ21DN9bBLUx0ver_e7QABZdZtIL-pXHRUryhL5zDBQXvx8Esjm2QAdYl9TzE8Htb-6gEhM_pky29dfyfjM5ER8m9fguwcEZJbVIQaIzDlLfJ5YeQ5cTfwmPy0yrBxcjTGq1ornSo6eM3ED8qcYcsq8b6dKTATLPG3xFP-pw-_GNDFhUQk6vC5O-rvhNZWpOJYmPK8eOrfNRuOYdFBudK5M7SAGDm73LNBM1ciVxkNtDcLwFAwQEQtsuO4P9ky47EjPEpkQqm6SFBMVZ5s8btT-sqLpRxgRZNahDmdHkY_1DvXYJ0R0XxZ3FWSFx09OS7MHomhlfmNtqopKdl3EL2DF7l4f9HLIxgt_3pnvsQA9y60bvbU-G3tAqDFkNSqZHtzb3F8PU4paW8CXm3zcu-tKvO1sryUr8VW5Ee-4D8uEDj82YbsQlWFyhiRQkUqoGULsCySFxnxHzxi6qMq8aewHWwuGsF0wATV0Bn9Etw8JUuk05Lehc4jgSuPsYriiH0XIwwvwDOFJ8TF879Z_OijZmG73zDmh9hfmF-JbK-8brTGsyYOywN4DSoAYc4Crmn5kNsjs_W_118DchgR9jhQpKEFHxsPy5xTPZEgzKEakosbbIVU0JsMjFigKoiKw9kem5vPKs7UmBBSCA9gpI1ef8VDfDlWhSendbpRzOnGqSpUivtfWSQ-ywhqdtWAjG8uKhjVFMTHdUK-Rt73ba4VIfZBPKGmD_OEWQSM8pP9yKN1qdkakmiVvQkr3oiKwtPhTtilIu61dYQqZq9pIZRFZn7Wx2wEk-osum36ixDV6r08OUSZkKPnVao_Pu201uJdgNKkUZAPlp53FNmXQvXmpfiE8QhqLTB7vA7utcBkdEbsq2_otbdrf4QQJqLzbaQ6GZApQI_rMxGqTCeelevpnFo9V_yfSzY2ySOaytytt9jnkdedVaa1nWklDhaApzUpqGx99B_OOwIHvb5FHkEYkJB3q10SSrElhCnKHtkZT9uYJyYfbDtfPlskz9PoPLO8f6r4_BhSWz4HzQ1xOqoa_hR7EJ1q9-yUcFkolnCUH6MmP3y-7YIXk12RYDSurleCBu7rofgw1zRIlnX5Cyiukvnqwlv5dCpWyWZ0Aj2yXd4Q_xctCPXlSfahwMaqIPKqzjKPK8aJg9G24DRHXyhxAUzf7uEtKbIBbS0MMWtPZs1qMSee1-mKK72Y-RcfglEKa_-jc-dxpZJh9a8RPko82uOX7cOBIkS6uy-ejxAmu41kIEySDsz3f46XKXep489qiQM5uGAiCDPum6YsEp-9CYFO7Hz_VlZoacQP6-mwszldOwwoBECY1Te7LQ2WSEN5qPVIZLFgUR-htjyFVMlyHZbu9mVkO99r3sDn3Uo9ggBmk0XCoMLpzAD9RSIhObZemhVEmpINerVi8NMxUirAGH6I-csaDMfOXHmD9xyLFSCW3O_mSn1HrTuEYFOaXMH8Q1Wij36IrNsBuYYoq95SWIV3vXldT1Rp01AAiq2ojS5D7lhF0vjJ_1jKbVspYyXuiQ0bIRkZQjeyJmmfhZVespWNLMbmO4W-CanRFtSURoggJEd_b79kSSBtkaBO6-BYFKMshhF94heA3Ncktn3kkWSAbggk8uvToFhAS5bOE_yXGlX5jL4WrrtyoFscbJPQ3UUaGg8rDwZZpCkhL7TUphYXhriX_TjDLtoFxR6Wxqk11GezJ_0lQq8kp2pK6EZH6eJdA3ckumqNAvWYPeqb-UNNAk4Mck_vLQiW9drFRCF1-I1RPEwYdOmTT9UaozQxQ66pG26LjUBZEFEm-0MNVmYFKyZkd_B7Cb7Dp9WQKyJd-_KjY1r-0n0Aosza55uTXadfEqY4oCeUCy4EvRTCyCuHAfq8Z8o-S8xgSOAo9EbDD-_LPjhiH0XIoUS-ho7O9MIBUW9hutubuOzGLkmJm6BDZPrae5hpm2ShNq7kBfmUDkzivAEaAN12wF--lNrjWZY-UpwdcPZf8YtQumcZjkOmQklRdwGPXtb3Apla2lXQU3UECS5k5FZoaNWVKW4w5q6OZcUVy8HUonjGTtqIiALpxKDpsKFMte_l4JrHnwyRkUe1ft_vCR86cLkxQ1SQ_SAjvoznS7HECXd2wwWxx9kvV3xccK71Z65qd1hD743ZM1bo2-QuueJ_Og9w-3Qtz3nPpUz4nzbM45VBuSbH7Jxh4Z_WzQv-pth2fHnKLrrmVxMOOAAMOcZ-ZsCrxwhE9PUn1doPcc1xkZaoUP_XDqsiwtIlc5OGeeppFdGyqkXSOGzj1LCxp5PlAQI07GMYxLz-o_HTIOu3R1C7DjU6vKQvQQztkMTGH6gw1f9Mqkz1ob5F0UKJGPPolp5htNECmgxM-lyITWpAhLPpzDGIsQdxphVcavxAH1lYLdLBVHaYuZP4yzfiw5fus7Q5OmA90QY889kY-7BBP-M1Nvwthh8SyHzLPTnojH7BR4fUzKMMJQ-AuR0bgr_ElW078olmQHdKzEzvWSKAV4oZVEWW-hEgylnK87bYd7e7z4Ntrkl_e8PmfYCjkxFlS4e_F6DswMAlZ6XFMNVJwli56k7blTDcJVAUgICcY5DGvvWNu3y7dJRZr3zR7I80aMU8O9jr5B7vZE4wuG57QyscTyPVQhirseuF_ne16PoXzXcw53vf8yUQ9t49WrEsbDbSUBYYQM8QgML01kF7WpYQdseFXg4YlHjckEU6S-XA7-i0Y_JARlehal26oGWoC20lBWEjZcS-S9-nRdpD-IOB6BEDgZ7meBt6N2RNL2j_d5AL24bxtW7anclAC-4DCcmSt9lPUXD9bWiNAEpF_8d7TuMU6UEgWgaUfbylDFFBnYTzIMBTC0kOX-rGIUp6n7xK7uXURpHo2gC7zVYXFb9pXfZa93tg-oik_eFYd41D1-wdcDK3MaE9Ajkgmmi41VUT3cJ6kSbYUVLJPvhomDS9NHObvYEtPGQsh3nx9XlDMaN_ZZ0XmvPstZxeU6qgc41OrUs-ZQePeYLcB2MztL65OMyPPmZqQxaz1M-qhy33RXtvDdSCpwSiyvQh1D9Byut3RfKQjVVjr2Q3Dxj1xCfzfJjoyqafMqn9dOppLCUAb0ZhPftXUzibjdQX0Mdb3HQJ3V9aYb2YQHyrPEgnuCJzIOYFqyuA_aY6xa56cut15ZEB5OeO-zsC6_nYcL7qB1wmH2gLJ9Ofu-GKqRJgtnD-skjQBTqjs9EgY3IkIjY-VIJzhngFuIfiOODflJgTN8HMEPG7TWxcwBTRvBGTx9EMA0zFbrwe3C7xTRW9joiY-pYglKUe-m97mlxklvCcV-uenLtdPKCMr14o4aBbnC91Gqo8Nhhfj-UTgiKxuESdYFNXZmnQoI90550FWA1DucftJ3CBbK3aGxGbbj1HBVzHTbpORrfs1qrqBn7vXm4ZK50BpvPeO7lOE_jSJ3QJUVWonVLY4tte1A401uEe_wrZFdvsdTWzgHujHwzCyNbOFzhGNku_7Y2tMewi6KpSFmxhiWxV5uHwMH22UFgg0oovnARUqo9Lr-ZcAg2mAq82U1FgtTxC9aQCcPNc2cXJZMaGSZ1rxa1PeR09v5gCzxqARp_zgKJOfRZ6mu2cnEOCMbEOCzyE_Bbt1LuPbKo-bh_JGTDW34n-rDSyOm9D7DpvXjg4mYSRObjrBFJAfcD-q15r1XiblbaFfqHeQKCA7rRDCkm4ikYO6amhCzLULj5mlGS7Q-uR-u_yX6CIdOxxkqUQdYxVLknUsOcSg0evkEcMKrDlUNWtOmmY_nfg7r_nqqk0PS2pPFLo3ukyjy87phsbkunABCFc0SVZdUVBJ-sTOAgYw-Q948vDpMkrrWfbph6z67DlCiW12u3SKalrfF5rBQZvVtfe1E6grCcrP_GnQoShzT-Ks--r45Jyd5tBKpe6W3PmQfQXD3rEzHDt_kaqmPT6rZAm-GNILgUPzYpM7pKQN3c3dmDynTm2IYZ0E.apYb2ZHyQ68xYqFDVyuerg");
        return JSONUtils.serialize(obj);
    }

    public String getBadRequestBody() throws JsonProcessingException {
        Map<String,Object> obj = new HashMap<>();
        obj.put("payload","eyJlbmMiOiJBMjU2R0NNIiwKImFsZyI6IlJTQS1PQUVQIiwKIngtaGN4LXJlY2lwaWVudF9jb2RlIjoiMS0yNzk5YjZhNC1jZjJkLTQ1ZmUtYTVlMS01ZjFjODI5NzllMGQiLAoieC1oY3gtcmVxdWVzdF9pZCI6IjI2YjEwNjBjLTFlODMtNDYwMC05NjEyLWVhMzFlMGNhNTA5MSIsCiJ4LWhjeC1jb3JyZWxhdGlvbl9pZCI6IjVlOTM0ZjkwLTExMWQtNGYwYi1iMDE2LWMyMmQ4MjA2NzRlMSIsCiJ4LWhjeC10aW1lc3RhbXAiOiIyMDIyLTAxLTA2VDA5OjUwOjIzKzAwIiwKIngtaGN4LXN0YXR1cyI6InJlcXVlc3QuaW5pdGlhdGUiLAoieC1oY3gtd29ya2Zsb3dfaWQiOiIxZTgzLTQ2MGEtNGYwYi1iMDE2LWMyMmQ4MjA2NzRlMSIsCiJ4LWhjeC1kZWJ1Z19mbGFnIjoiSW5mbyIsCiJ4LWhjeC1lcnJvcl9kZXRhaWxzIjp7ImVycm9yLmNvZGUiOiAiYmFkLmlucHV0IiwgImVycm9yLm1lc3NhZ2UiOiAiUHJvdmlkZXIgY29kZSBub3QgZm91bmQiLCAidHJhY2UiOiAiIn0sCiJ4LWhjeC1kZWJ1Z19kZXRhaWxzIjp7ImVycm9yLmNvZGUiOiAiYmFkLmlucHV0IiwgImVycm9yLm1lc3NhZ2UiOiAiUHJvdmlkZXIgY29kZSBub3QgZm91bmQiLCJ0cmFjZSI6IiJ9LAoieC1oY3gtc3RhdHVzX2ZpbHRlcnMiOnsicmVxdWVzdF9pZCI6IjI2YjEwNjBjLTFlODMtNDYwMC05NjEyLWVhMzFlMGNhNTEwMSJ9LAoiandzX2hlYWRlciI6eyJ0eXAiOiJKV1QiLCAiYWxnIjoiUlMyNTYifSwKImp3ZV9oZWFkZXIiOnsiYWxnIjoiUlNBLU9BRVAiLCJlbmMiOiJBMjU2R0NNIn0KfQ==.6KB707dM9YTIgHtLvtgWQ8mKwboJW3of9locizkDTHzBC2IlrT1oOQ.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.AxY8DCtDaGlsbGljb3RoZQ.KDlTtXchhZTGufMYmOYGS4HffxPSUrfmqCHXaI9wOGY.Mz-VPPyU4RlcuYv1IwIvzw");
        return JSONUtils.serialize(obj);
    }

    public String getExceptionRequestBody() throws JsonProcessingException {
        Map<String,Object> obj = new HashMap<>();
        obj.put("payload","eyJlbmMiOiJBMjU2R0NNIiwKImFsZyI6IlJTQS1PQUVQIiwKIngtaGN4LXNlbmRlcl9jb2RlIjoiMS05ODc1Ni1jZjJkLTQ1ZmUtYTVlMS01ZjFjODI5NzllMGQiLAoieC1oY3gtcmVjaXBpZW50X2NvZGUiOiIxLTI3OTliNmE0LWNmMmQtNDVmZS1hNWUxLTVmMWM4Mjk3OWUwZCIsCiJ4LWhjeC1hcGlfY2FsbF9pZCI6MTIzLAoieC1oY3gtdGltZXN0YW1wIjoiMjAyMi0wMS0wNlQwOTo1MDoyMyswMCIsCiJ4LWhjeC13b3JrZmxvd19pZCI6IjFlODMtNDYwYS00ZjBiLWIwMTYtYzIyZDgyMDY3NGUxIgp9.6KB707dM9YTIgHtLvtgWQ8mKwboJW3of9locizkDTHzBC2IlrT1oOQ.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.AxY8DCtDaGlsbGljb3RoZQ.KDlTtXchhZTGufMYmOYGS4HffxPSUrfmqCHXaI9wOGY.Mz-VPPyU4RlcuYv1IwIvzw");
        return JSONUtils.serialize(obj);
    }

    public String getHeadersMissingRequestBody() throws JsonProcessingException {
      Map<String,Object> obj = new HashMap<>();
      obj.put("payload","eyJlbmMiOiJBMjU2R0NNIiwKImFsZyI6IlJTQS1PQUVQIiwKIngtaGN4LXJlY2lwaWVudF9jb2RlIjoiMS0yNzk5YjZhNC1jZjJkLTQ1ZmUtYTVlMS01ZjFjODI5NzllMGQiLAoieC1oY3gtcmVxdWVzdF9pZCI6IjI2YjEwNjBjLTFlODMtNDYwMC05NjEyLWVhMzFlMGNhNTA5MSIsCiJ4LWhjeC1jb3JyZWxhdGlvbl9pZCI6IjVlOTM0ZjkwLTExMWQtNGYwYi1iMDE2LWMyMmQ4MjA2NzRlMSIsCiJ4LWhjeC10aW1lc3RhbXAiOiIyMDIxLTEwLTI3VDIwOjM1OjUyLjYzNiswNTMwIiwKIngtaGN4LXN0YXR1cyI6InJlcXVlc3QuaW5pdGlhdGUiLAoieC1oY3gtd29ya2Zsb3dfaWQiOiIxZTgzLTQ2MGEtNGYwYi1iMDE2LWMyMmQ4MjA2NzRlMSIsCiJ4LWhjeC1kZWJ1Z19mbGFnIjoiSW5mbyIsCiJ4LWhjeC1lcnJvcl9kZXRhaWxzIjp7ImVycm9yLmNvZGUiOiAiYmFkLmlucHV0IiwgImVycm9yLm1lc3NhZ2UiOiAiUHJvdmlkZXIgY29kZSBub3QgZm91bmQiLCAidHJhY2UiOiAiIn0sCiJ4LWhjeC1kZWJ1Z19kZXRhaWxzIjp7ImVycm9yLmNvZGUiOiAiYmFkLmlucHV0IiwgImVycm9yLm1lc3NhZ2UiOiAiUHJvdmlkZXIgY29kZSBub3QgZm91bmQiLCJ0cmFjZSI6IiJ9LAoiandzX2hlYWRlciI6eyJ0eXAiOiJKV1QiLCAiYWxnIjoiUlMyNTYifSwKImp3ZV9oZWFkZXIiOnsiYWxnIjoiUlNBLU9BRVAiLCJlbmMiOiJBMjU2R0NNIn0KfQ==.6KB707dM9YTIgHtLvtgWQ8mKwboJW3of9locizkDTHzBC2IlrT1oOQ.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.AxY8DCtDaGlsbGljb3RoZQ.KDlTtXchhZTGufMYmOYGS4HffxPSUrfmqCHXaI9wOGY.Mz-VPPyU4RlcuYv1IwIvzw");
      return JSONUtils.serialize(obj);
    }

    public Response validHealthResponse() {
        return new Response("healthy",true);
    }
}
