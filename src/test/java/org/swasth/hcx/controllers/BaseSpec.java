package org.swasth.hcx.controllers;

import com.fasterxml.jackson.core.JsonProcessingException;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.autoconfigure.web.servlet.WebMvcTest;
import org.springframework.boot.test.mock.mockito.MockBean;
import org.springframework.core.env.Environment;
import org.springframework.test.context.ActiveProfiles;
import org.springframework.test.web.servlet.MockMvc;
import org.springframework.test.web.servlet.setup.MockMvcBuilders;
import org.springframework.web.context.WebApplicationContext;
import org.swasth.hcx.dto.Response;
import org.swasth.hcx.utils.JSONUtils;
import org.swasth.hcx.controllers.v1.*;
import org.swasth.hcx.helpers.EventGenerator;
import org.swasth.hcx.service.HeaderAuditService;

import java.util.HashMap;
import java.util.Map;


@WebMvcTest({CoverageEligibilityController.class, PreAuthController.class, ClaimsController.class, PaymentsController.class, AuditController.class, StatusController.class, SearchController.class, CommunicationController.class, PredeterminationController.class})
@ExtendWith(MockitoExtension.class)
@ActiveProfiles("test")
public class BaseSpec {

    @Autowired
    protected WebApplicationContext wac;

    protected MockMvc mockMvc;

    @MockBean
    protected EventGenerator mockEventGenerator;

    @Mock
    protected Environment mockEnv;

    @MockBean
    protected HeaderAuditService headerAuditService;


    @BeforeEach
    public void setup() {
        this.mockMvc = MockMvcBuilders.webAppContextSetup(wac).build();
    }

    public String getRequestBody() throws JsonProcessingException {
        Map<String,Object> obj = new HashMap<>();
        obj.put("payload","eyJ4LWhjeC1yZWNpcGllbnRfY29kZSI6IjEtMjk0ODJkZjMtZTg3NS00NWVmLWE0ZTktNTkyYjZmNTY1NzgyIiwieC1oY3gtcmVxdWVzdF9pZCI6IjA1OTAyMGM3LWVjOWEtNDNjMy04OGNiLTYzOTc5ZGIzZTU5ZCIsIngtaGN4LXRpbWVzdGFtcCI6IjIwMjEtMTAtMjdUMjA6MzU6NTIuNjM2KzA1MzAiLCJ4LWhjeC1zZW5kZXJfY29kZSI6IjEtNTIxZWFlYzctOGNiOS00YjZjLThiNGUtNGRiYTMwMGFmNmY0IiwieC1oY3gtY29ycmVsYXRpb25faWQiOiJjYWUwODRjZC1jODkwLTQ5OGEtOTM2YS0xNzZjMDlmYTY0NmEiLCJlbmMiOiJBMjU2R0NNIiwieC1oY3gtd29ya2Zsb3dfaWQiOiIyOWMwNmU2OC04M2E5LTQzNDAtYjAwMi1iYTNiOGFmNmZmOWYiLCJhbGciOiJSU0EtT0FFUC0yNTYiLCJ4LWhjeC1hcGlfY2FsbF9pZCI6ImI2NTE0YWYwLWRjYTAtNDkwOS1hNzgwLTljNDhhYmIyZTJmZiIsIngtaGN4LXN0YXR1cyI6InJlcXVlc3QucXVldWVkIn0.PAWhc_-Xq1GUxGcog55uncVoYcyHIUOoqjQdbawLuDLjn1eyw94_twLrXmUSUEOh_lEdSfK9JVs8AB2tSCj0qQoYOBJnrKlTW7Je9dmZaptRqTj4yL2PrWrF-O-QJEeh-WR_gT0j0ShkEapQTFc9WHWvE7eFF_YyBU1_PK6s9ZRlZYOx6eE3SIkIBaHlBu3NSDsYaxAh9KF9tmsuC9Ff6LbaDLNIMoUwkjx_vrSK7ZOrWQeYUR-xZloNTzmN_VVmjDyaee-nHdJ1C3iQYvMrDc65H2egaqLb7NMgTd1kKkPz4V3EaYARyOBAwzVKSaRy8TwyhM8oHC7EQFth87YtxQ.SRWyyjYzAWyrN8l4.zGxK77ih1s4Q1bYtaGwv8yW5omtivw8sqL-vICKUzHOcFGEY9RaxC06uoXQSrzBFL53DbH08-XgW4GXvHtj05oHzN8j59P5Kjpik3E0tkqqijAfLDv69aoUkZRnpS1unQFJ4e3shPiyNbEJKzdakZqkcP1xnUBU7vezuL5UMr4Y_C-fI8n2L4OLYW4j-Xk8Z1iiC4JUVSXsbnuW6rV0KK2mn5i6CAmu7FlCFsyGzqerWSVCNBIFdqwUpwXZHbdUjHnxBxzXE16zwEHmWzd8XISiOR5570a9ixlM9CpHEreZSnwmfG6lwDgCuYWCbemK8UMb0MYLL5kzqCp8OEMJM-q-fZoCyatTGRi8K5YBND1A0eMuURmSuWg8b4GT5l7coRUC3Jav6JFcmwN3y69e1-ec5xzUzFEvAF_yvj7XHzTSy73NVABC8UI4Qs4O2UdwF5WKxpmxSl2T9_sy7qvTM7ijDth8zdstwoi4sCS18K9EAwBmPgOuxnXhGsduPLxtgI_RvV5FfVNJQkJN1IgALt8SuDVgdpDwGOcdS_8DkOdbQjEfNC4Ifo7O3YGrhuc3BoPzH4S9l0BSY_Bms9_R-RFrPESCYYcCniXUaNwztH90kcLv6ClgRd2CCS1Kz9Pp5o7nJeJQO_tonkNVhpdjTjy7eckMVebpZGmGXUGYFpbecsbKAJESE799tlcUTmnypFfHvRhY_21PEi3zTQYcR8VIQUWeoqp_1lRtKrIzDfkUbTckKzYpa8oQN88KTIwo6zQiMTe8sMRQsY3M9TN8-3mAXO6mHZlm4l99uxlQAs5_gRkP_7kjyXfrJ6hYk9tZGK9vHFxKzjGUrASS2ynXMRBpM7-rKh4JtsZkORGxQGStogrnCD8TZ0OyMe4e8AzbqlcnaMKz64bOm1pWHiZIb-bj9VxMHNm-ekQJFD7VI1nVRSOK2-3IkuQzxfCva2MwiBI1DCHsFn1ozPP8h-GCNDctMzNa2j5Q9oZrLsbx1Hii9WO3g6hWPeWxlHuU2UY5Giy2Oxp5NZpgVf9k3QVCdcGSGrWkbVxOON1B34nACA0CHcEzuyN4vmNlkyp8QWzJFYRiznj4656mHQBs0al5hywla010OPyxQNCbLDXUt-Ufyn9iHOiyKaxra1202XAOHkXhlRsCBRJm2RbyThND-x9LyBse16FswpnxfO-utfWzliARJvW9IPhg_rnFEWBI-TgoNf9lrRZjVFAn1Wb-rc0_9rNcSAxRr4U-UDT8_K9F-mTgzGJN9dLobT9d6Pgs4cZorctBgJjBMgm95ra9Nef6ymRMsqSXl6g71wGQE2yPLAd6pg1tr-Y6XLuuq6Z7R8OfbDn8DNdW-kgR6Y_1GAmHjKHtaRiC0wSJa2PN9fodTcmC4qajkgNUvTrDCCi-DwQdP14ouXuSapLExJ-qvPW6c5shy8tzubWGm6zciO0YYR5Nx-Mw20XWG3W0uWxy1UpfzWK4QturmLyMoJ6DzTPwsyQXdqb3IOTMCdzkHc2ciTzyYY-k-7H1SvjwVCYXZWEN5ofJ5OTMWFLP9Uq2Tt_a0ljKf70NUOSki1kUKuko95g-GLoOfwnhjC5URmgRA4k-hk1fBOONYgsJl4zQyWhGgUwACP8GkkmHeIce8bZi5JfK2EqqqdtMkYtotsRdIDRhfp-9AAqeEzKU674lyIQZGvcQRWTgeJ2dqWo10jJMDpgYxgrHAnvGouFx-SdSeLoL9VQN50sKzBFSwlLjMIKRc55IJ-XIFoQqi8SXs6bds77Agp5vn8oPcD7Z80LCwK3okZqKsT0blOs1F0Zq2Bmi22cH_NvoEwyownjnZ6H89JfsjiqfCkgUgw9GWHbQ6NlqCWrx9in36qRh34IDK_qdCS3-ophBmglqDNlXJ_IUibgAzhmHydheOo7lWAleG1Lb-yJyNA0GMxLD95OJ9g_84RDlJIqHQExzpyYXa4su7RjAaUpY8xNGHnDZfu3q8pOu6imUpOIJjw_oK3-P5oNcrUPV_Mjeo4GMt3JRkIS1310tdGYAoRCedB_ivtELRMDNSpp3t_NvZ_gwHJFp-yYC44BWW_zRNZHsN4AIApAGZ3HCnAd-HArL62ep3zfHM20k2z80fuQ7OfYBJEdRxv-3PIU-VpIodFC-a8f7hj5N62CNYlfAMyWCJYUxAJxNY4Y4No_Jwp6w8dOL-ovlW5qM9XXOkFCZ3gvLWgTpUy28brB5PvcrVJlPKkOuqBL85NAAWzTEKCoh2FF9KBaEXteS0rjT7ieMvairzGWckxRBGTpDwrGSN4ldIAynA6QfGTaEYD3sbdLWYFzdYcnOD4Os5p-NRy76SCavqLCzm4OoUraASX6R4oDEmhtBY7sWcWB3SbzJnb-TDPLhJMD54MAp9mXXumx8bl6Ood_gj5OmQiPTO3rRc_gPQU3QiFZ0XYNWyJ9HN33oJ1kggWCJWs_wtQ5Ktr5bq3ap6vDBIIP1lA_tujf1bdCklk8FXz68hP6Vrrzc7YIX7rNFl9Nw_W_kpdW92zW8c4L9F8SoIdd_IxApjSywn4ouametfqqTWh4bMKIE6MnahM8JBHsJOuCM23-rZyKFiRlFfNDPcKVY6HGohBYPEzrA3_O82rIBsk2Mm4Zjv6NQf7xzejn_2Fkzj9Gdz-0nRaMhYdLPUCWFV3z-CDMGV5z9hMJ9e6oWOVNJaIn8W30GIlZMGNhPFal-yzNhLqy9Qxfcbv6fffbGo05gWuBKzrSXBLFR4wcyGiV83ZY8W4SXByauqQBabBOx5F6h0v0tNHPxQYopo90z-TiJ90KebjSURfaLsy-BN2by_YdYev8z7Uj8oKCW3bMmgE0TLbpLNdYpJWbUkdh71CbOPqMzPL2tM4iXyLFh7kKOTLWKlC5JgojkVTmw3afptBK1puFJWBlyLbJN4rLVH15QcWLnF3mW0gXTZ5JoZQzgXoo-XgcoYGjfvD3OJE9lclJTc3L3JeoyshV4PdoSIhq5DkFSgvBgPI5X43DgZ21fVOhYlKlrSnJOXQGfBPm7d443Y64_Ln6DR41FQhyO-oDBI20JuA4llue2W4mmobV1taL5PVLThTrk_wBHlbkDQytA_s2kRpSmE-ivpjjcxS9oYUZraAOBi6RKc_sE5f05UtpVj34yTNnFBI91zeQOjf7VCATJf1xRRFrd82TMmIzUGi8w3l0jYPg8vovNLhjh7YinOXvSOBvtSkx0bjX3ZZ2g7e4obvIbI2CgYO_kCZ0USg05YiJLw4otjXDnpBdWxrOcjfwwJw5vJsHKOW5oVEMtgIGRCZlGsjPVPEgC443f68LCGhhsBeoiSjV_GoJ3WEVewUh6H0UctIqK8JvPvG1_34WP4LLpOsb0cgzs5coSMjayXNFIj18f8QQz6zYXFZBjYrcLM6dxSQh74peKZL3pNK4gWTN2O6eAjYOlt_WSnZ6LesWigz8aZu-Lj_LZOehpgwCdDmN_HwsQyuqEsxiRgTmOicl1EkP9EOTGTR2BEVhRl8gZR_cv18JqHOPu0eLM6XXTDvq4XG0OQjVh4vz0tFmop7LuEUccM23WbYywmhjPh28KCvTkzivVfPwbB5vYOGNhY2SsyUNQJevTvzpZwMERJVez3Ul2DMNlx6DeYiZmovHPh1jEtWEfrejQiCcTPG7giu1u8iqi4Qxx3BYnwFa0GJUBlXKgZMaSqpYJkdXDvoQvRMjyDpYPw3gU4dUaLzgvfZ4ADuIZX_abxMPFyn3B8_aISwUTK6-Z0hqSC2E_x8v3IoHZrbxgsCLvniFWWFZoiQqEx3JLn3FtL42kYAn3jicJ5KxnC6_wJ-e2O8xj9u5Ey4qVR4jefWCBKbQGdQ6bZHC1UBCH3qqCSA3Zjo-be5pSlYch_5w90MQ8lp9mFW_NnFuA2xB3KQugv8BG2DjSDzD0805yrtoo5sJ51pxqwN9Fd_bty5eSygkhqWsQBem2JeLnkCNS18fPza3tEqZ2nXnHCbWKthw5JV5S91bJZybPqpFAW14h3upBdBJf_mh5qif7xpiDOBXIITXcTsnv5L1MmIiiV-ZYGjAf_pjgQxSNftzGGoCUYxjJ_T_LCEYJE_D4Lufte906mDFDb-VzqRwv_gj3u1CFjNT-PVQ8BWlttYUwImyLMBAqPzOGs98jMnFyVQ2-ajjmY_qyRlG5D4fHBKNsrrWyPMtX6VwRuAtUrwz7lWFPpT48l4MCtFF0DnEg4X3xkfYjkALjGYS-cXHgIZ2dz0tGYtif8zeBU92Qq0wRhlJAnCfbWlLXLGaJqY-nJ5SCnVfE2Lw_SHsvb5IKt7wJamuGxX8iu0z_qYwJW2EFPcTrFaJhgesmyCvJtKjEuBC4q5Eh566eQsaF8EXZsO_4Q4smaoHu4mt91CdT97GFG1JZjgTwXrHMs9sIPwmB2WsTQFzn4kzquhP3PhqB75SncODIf55IgQJObHe4IEJ9j6JI4yahrVPDge_7E-Kn0tAPf_1iJsxUZq28x6gLxPMRqc6Wry5TZa9l1ovyt5F6JuixqoxlKKcfjzINmrwnr4dn7S7ln3nKOqDOPLChP75RqjsMsx4NsIfuId8SL2BcfDMvOnq3xOMnDts7AnA4u4K28mqmH9_BKenYL6QygiT_Sac394nUWPjP9xMraNm8OVHBF50y74CVJi1y4nAl8jJ62ztprrkfVlPTKKRbo_7zVbwUI6arwczSSEakIaXLOwN11aQP8_eeewc9fTG9zGn_Ca4E3EinvtrCPQijEOGW0yoTIIeBiyeUSgwbF_u09R8xfkLq9HnhVHOvSsPQvL-mbcQtCkY4lwRw2r57DhYeBWdN6W9n2ZaZ6-BSTKc7_fyO5uS4euh2rv7C6MvxxVN6JMQ1pNIHS6_OD0p6O3TLa36_voSIchK2T3KJposo44_IRLwKnpKLXaMM.IBx_NwuA6cGhRBH9Qo6kXQ");
        return JSONUtils.serialize(obj);
    }

    public String getBadRequestBody() throws JsonProcessingException {
        Map<String,Object> obj = new HashMap<>();
        obj.put("payload","eyJlbmMiOiJBMjU2R0NNIiwKImFsZyI6IlJTQS1PQUVQIiwKIngtaGN4LXJlY2lwaWVudF9jb2RlIjoiMS0yNzk5YjZhNC1jZjJkLTQ1ZmUtYTVlMS01ZjFjODI5NzllMGQiLAoieC1oY3gtcmVxdWVzdF9pZCI6IjI2YjEwNjBjLTFlODMtNDYwMC05NjEyLWVhMzFlMGNhNTA5MSIsCiJ4LWhjeC1jb3JyZWxhdGlvbl9pZCI6IjVlOTM0ZjkwLTExMWQtNGYwYi1iMDE2LWMyMmQ4MjA2NzRlMSIsCiJ4LWhjeC10aW1lc3RhbXAiOiIyMDIyLTAxLTA2VDA5OjUwOjIzKzAwIiwKIngtaGN4LXN0YXR1cyI6InJlcXVlc3QuaW5pdGlhdGUiLAoieC1oY3gtd29ya2Zsb3dfaWQiOiIxZTgzLTQ2MGEtNGYwYi1iMDE2LWMyMmQ4MjA2NzRlMSIsCiJ4LWhjeC1kZWJ1Z19mbGFnIjoiSW5mbyIsCiJ4LWhjeC1lcnJvcl9kZXRhaWxzIjp7ImVycm9yLmNvZGUiOiAiYmFkLmlucHV0IiwgImVycm9yLm1lc3NhZ2UiOiAiUHJvdmlkZXIgY29kZSBub3QgZm91bmQiLCAidHJhY2UiOiAiIn0sCiJ4LWhjeC1kZWJ1Z19kZXRhaWxzIjp7ImVycm9yLmNvZGUiOiAiYmFkLmlucHV0IiwgImVycm9yLm1lc3NhZ2UiOiAiUHJvdmlkZXIgY29kZSBub3QgZm91bmQiLCJ0cmFjZSI6IiJ9LAoieC1oY3gtc3RhdHVzX2ZpbHRlcnMiOnsicmVxdWVzdF9pZCI6IjI2YjEwNjBjLTFlODMtNDYwMC05NjEyLWVhMzFlMGNhNTEwMSJ9LAoiandzX2hlYWRlciI6eyJ0eXAiOiJKV1QiLCAiYWxnIjoiUlMyNTYifSwKImp3ZV9oZWFkZXIiOnsiYWxnIjoiUlNBLU9BRVAiLCJlbmMiOiJBMjU2R0NNIn0KfQ==.6KB707dM9YTIgHtLvtgWQ8mKwboJW3of9locizkDTHzBC2IlrT1oOQ.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.AxY8DCtDaGlsbGljb3RoZQ.KDlTtXchhZTGufMYmOYGS4HffxPSUrfmqCHXaI9wOGY.Mz-VPPyU4RlcuYv1IwIvzw");
        return JSONUtils.serialize(obj);
    }

    public String getExceptionRequestBody() throws JsonProcessingException {
        Map<String,Object> obj = new HashMap<>();
        obj.put("payload","eyJlbmMiOiJBMjU2R0NNIiwKImFsZyI6IlJTQS1PQUVQIiwKIngtaGN4LXNlbmRlcl9jb2RlIjoiMS05ODc1Ni1jZjJkLTQ1ZmUtYTVlMS01ZjFjODI5NzllMGQiLAoieC1oY3gtcmVjaXBpZW50X2NvZGUiOiIxLTI3OTliNmE0LWNmMmQtNDVmZS1hNWUxLTVmMWM4Mjk3OWUwZCIsCiJ4LWhjeC1hcGlfY2FsbF9pZCI6MTIzLAoieC1oY3gtdGltZXN0YW1wIjoiMjAyMi0wMS0wNlQwOTo1MDoyMyswMCIsCiJ4LWhjeC13b3JrZmxvd19pZCI6IjFlODMtNDYwYS00ZjBiLWIwMTYtYzIyZDgyMDY3NGUxIgp9.6KB707dM9YTIgHtLvtgWQ8mKwboJW3of9locizkDTHzBC2IlrT1oOQ.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.AxY8DCtDaGlsbGljb3RoZQ.KDlTtXchhZTGufMYmOYGS4HffxPSUrfmqCHXaI9wOGY.Mz-VPPyU4RlcuYv1IwIvzw");
        return JSONUtils.serialize(obj);
    }

    public String getHeadersMissingRequestBody() throws JsonProcessingException {
      Map<String,Object> obj = new HashMap<>();
      obj.put("payload","eyJlbmMiOiJBMjU2R0NNIiwKImFsZyI6IlJTQS1PQUVQIiwKIngtaGN4LXJlY2lwaWVudF9jb2RlIjoiMS0yNzk5YjZhNC1jZjJkLTQ1ZmUtYTVlMS01ZjFjODI5NzllMGQiLAoieC1oY3gtcmVxdWVzdF9pZCI6IjI2YjEwNjBjLTFlODMtNDYwMC05NjEyLWVhMzFlMGNhNTA5MSIsCiJ4LWhjeC1jb3JyZWxhdGlvbl9pZCI6IjVlOTM0ZjkwLTExMWQtNGYwYi1iMDE2LWMyMmQ4MjA2NzRlMSIsCiJ4LWhjeC10aW1lc3RhbXAiOiIyMDIxLTEwLTI3VDIwOjM1OjUyLjYzNiswNTMwIiwKIngtaGN4LXN0YXR1cyI6InJlcXVlc3QuaW5pdGlhdGUiLAoieC1oY3gtd29ya2Zsb3dfaWQiOiIxZTgzLTQ2MGEtNGYwYi1iMDE2LWMyMmQ4MjA2NzRlMSIsCiJ4LWhjeC1kZWJ1Z19mbGFnIjoiSW5mbyIsCiJ4LWhjeC1lcnJvcl9kZXRhaWxzIjp7ImVycm9yLmNvZGUiOiAiYmFkLmlucHV0IiwgImVycm9yLm1lc3NhZ2UiOiAiUHJvdmlkZXIgY29kZSBub3QgZm91bmQiLCAidHJhY2UiOiAiIn0sCiJ4LWhjeC1kZWJ1Z19kZXRhaWxzIjp7ImVycm9yLmNvZGUiOiAiYmFkLmlucHV0IiwgImVycm9yLm1lc3NhZ2UiOiAiUHJvdmlkZXIgY29kZSBub3QgZm91bmQiLCJ0cmFjZSI6IiJ9LAoiandzX2hlYWRlciI6eyJ0eXAiOiJKV1QiLCAiYWxnIjoiUlMyNTYifSwKImp3ZV9oZWFkZXIiOnsiYWxnIjoiUlNBLU9BRVAiLCJlbmMiOiJBMjU2R0NNIn0KfQ==.6KB707dM9YTIgHtLvtgWQ8mKwboJW3of9locizkDTHzBC2IlrT1oOQ.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.AxY8DCtDaGlsbGljb3RoZQ.KDlTtXchhZTGufMYmOYGS4HffxPSUrfmqCHXaI9wOGY.Mz-VPPyU4RlcuYv1IwIvzw");
      return JSONUtils.serialize(obj);
    }

    public Response validHealthResponse() {
        return new Response("healthy",true);
    }
}
